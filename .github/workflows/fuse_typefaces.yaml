name: Fuse Typefaces

on:
  schedule:
    - cron: "*/5 * * * *"

  push:
    branches:
      - "**"

  workflow_dispatch:

jobs:
  check_release_updates:
    name: Check Release Updates
    runs-on: ubuntu-latest
    outputs:
      IS_UPDATED: ${{ steps.check_release_updates.outputs.IS_UPDATED }}
      LATEST_JETBRAINS_RELEASE_TAG: ${{ steps.check_release_updates.outputs.LATEST_JETBRAINS_RELEASE_TAG }}
      LATEST_MAPLE_RELEASE_TAG: ${{ steps.check_release_updates.outputs.LATEST_MAPLE_RELEASE_TAG }}

    steps:
      - name: Fetch Git Folder
        uses: actions/checkout@v4
        with:
          sparse-checkout: .git

      - name: Get Preview Run Id
        run: |
          PREV_RUN_ID=$(gh run list --workflow "$GITHUB_WORKFLOW" --limit 2 --json databaseId --jq '.[1].databaseId')
          echo "PREV_RUN_ID=$PREV_RUN_ID" >> $GITHUB_ENV
          echo "Preview Run Id: $PREV_RUN_ID"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Download Preview Release Tags
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: release_tags
          run-id: ${{ env.PREV_RUN_ID }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Check Release Updates
        id: check_release_updates
        run: |
          PREV_JETBRAINS_RELEASE_TAG=$(cat jetbrains_release_tag.txt 2>/dev/null || echo "")
          PREV_MAPLE_RELEASE_TAG=$(cat maple_release_tag.txt 2>/dev/null || echo "")
          LATEST_JETBRAINS_RELEASE_TAG=$(curl -s https://api.github.com/repos/JetBrains/JetBrainsMono/releases/latest | jq -r '.tag_name')
          LATEST_MAPLE_RELEASE_TAG=$(curl -s https://api.github.com/repos/subframe7536/maple-font/releases/latest | jq -r '.tag_name')

          if [[ "$PREV_JETBRAINS_RELEASE_TAG" == "$LATEST_JETBRAINS_RELEASE_TAG" || "$PREV_MAPLE_RELEASE_TAG" != "$LATEST_MAPLE_RELEASE_TAG" ]]; then
            echo "$LATEST_JETBRAINS_RELEASE_TAG" > jetbrains_release_tag.txt
            echo "$LATEST_MAPLE_RELEASE_TAG" > maple_release_tag.txt
            echo "IS_UPDATED=true" >> $GITHUB_OUTPUT
            echo "LATEST_JETBRAINS_RELEASE_TAG=$LATEST_JETBRAINS_RELEASE_TAG" >> $GITHUB_OUTPUT
            echo "LATEST_MAPLE_RELEASE_TAG=$LATEST_MAPLE_RELEASE_TAG" >> $GITHUB_OUTPUT
          else
            echo "IS_UPDATED=false" >> $GITHUB_OUTPUT
          fi

          echo "Preview Jetbrains Release Tag: $PREV_JETBRAINS_RELEASE_TAG"
          echo "Preview Maple Release Tag: $PREV_MAPLE_RELEASE_TAG"
          echo "Latest Jetbrains Release Tag: $LATEST_JETBRAINS_RELEASE_TAG"
          echo "Latest Maple Release Tag: $LATEST_MAPLE_RELEASE_TAG"

      - name: Upload Release Tags
        uses: actions/upload-artifact@v4
        with:
          name: release_tags
          path: "*_release_tag.txt"

  fuse_and_release_fonts:
    name: Fuse And Release Fonts
    runs-on: ubuntu-latest
    needs: check_release_updates
    if: needs.check_release_updates.outputs.IS_UPDATED == 'true'
    strategy:
      fail-fast: false
      matrix:
        narrow: [{ suffix: -N, args: --cn-narrow }, { suffix: "", args: "" }]

    steps:
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          check-latest: true

      - name: Install Pip Dependencies
        run: pip install gftools fonttools

      - name: Build Jetbrains
        run: |
          git clone -b "$LATEST_JETBRAINS_RELEASE_TAG" --single-branch https://github.com/JetBrains/JetBrainsMono.git
          cd JetBrainsMono
          gftools builder sources/config.yaml
          cd ..
          mkdir -p source-fonts/jetbrains
          cp -r JetBrainsMono/fonts/ttf/* source-fonts/jetbrains/
        env:
          LATEST_JETBRAINS_RELEASE_TAG: ${{ needs.check_release_updates.outputs.LATEST_JETBRAINS_RELEASE_TAG }}

      - name: Build Maple
        run: |
          git clone -b "$LATEST_MAPLE_RELEASE_TAG" --single-branch https://github.com/subframe7536/maple-font.git
          cd maple-font
          pip install -r requirements.txt
          python build.py --normal --liga --no-nerd-font --cn --hinted --ttf-only ${{ matrix.narrow.args }}
          cd ..
          mkdir -p source-fonts/maple
          cp -r maple-font/fonts/CN/* source-fonts/maple/
        env:
          LATEST_MAPLE_RELEASE_TAG: ${{ needs.check_release_updates.outputs.LATEST_MAPLE_RELEASE_TAG }}

      - name: Fuse Fonts
        run: |
          mkdir -p fused_fonts
          for style in Regular Bold Italic BoldItalic ExtraLight ExtraLightItalic Light LightItalic Medium MediumItalic SemiBold SemiBoldItalic Thin ThinItalic ExtraBold ExtraBoldItalic; do
            fonttools merge "source-fonts/maple/MapleMonoNormal-CN-${style}.ttf" "source-fonts/jetbrains/JetBrainsMono-${style}.ttf"
            mv merged.ttf "fused_fonts/JetbrainsMapleMono-${style}.ttf"
          done

      - name: Zip Fonts
        run: zip -r -j JetbrainsMapleMono${{ matrix.narrow.suffix }}.zip fused_fonts/

      - name: Generate Release Tag
        run: |
          RELEASE_TAG="1.$(echo "$LATEST_JETBRAINS_RELEASE_TAG" | sed 's/^v//' | tr -d '.').$(echo "$LATEST_MAPLE_RELEASE_TAG" | sed 's/^v//' | tr -d '.')"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          echo "Release Tag: $RELEASE_TAG"
        env:
          LATEST_JETBRAINS_RELEASE_TAG: ${{ needs.check_release_updates.outputs.LATEST_JETBRAINS_RELEASE_TAG }}
          LATEST_MAPLE_RELEASE_TAG: ${{ needs.check_release_updates.outputs.LATEST_MAPLE_RELEASE_TAG }}

      - name: Release Fonts
        uses: softprops/action-gh-release@v2
        with:
          files: JetbrainsMapleMono${{ matrix.narrow.suffix }}.zip
          body: >
            Fused with
            [JetBrains Mono ${{ needs.check_release_updates.outputs.LATEST_JETBRAINS_RELEASE_TAG }}](https://github.com/JetBrains/JetBrainsMono/releases/tag/${{ needs.check_release_updates.outputs.LATEST_JETBRAINS_RELEASE_TAG }}) &
            [Maple Mono ${{ needs.check_release_updates.outputs.LATEST_MAPLE_RELEASE_TAG }}](https://github.com/subframe7536/maple-font/releases/tag/${{ needs.check_release_updates.outputs.LATEST_MAPLE_RELEASE_TAG }})
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.RELEASE_TAG }}
          draft: false
          prerelease: false
          make_latest: true
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
