name: Fuse Typefaces

on:
  schedule:
    - cron: "*/5 * * * *"
  push:
    branches:
      - "**"
  workflow_dispatch:

env:
  LATEST_JETBRAINS_RELEASE_API_URL: https://api.github.com/repos/JetBrains/JetBrainsMono/releases/latest
  LATEST_MAPLE_RELEASE_API_URL: https://api.github.com/repos/subframe7536/maple-font/releases/latest
  JETBRAINS_GIT_URL: https://github.com/JetBrains/JetBrainsMono.git
  MAPLE_GIT_URL: https://github.com/subframe7536/maple-font.git
  JETBRAINS_COPYRIGHT: Copyright 2020 The JetBrains Mono Project Authors (https://github.com/JetBrains/JetBrainsMono)
  MAPLE_COPYRIGHT: Copyright 2022 The Maple Mono Project Authors (https://github.com/subframe7536/maple-font)
  FUSION_NAME: JetBrains Maple Mono
  FUSION_ID: JetBrainsMapleMono
  FUSION_DESCRIPTION: The free and open-source typeface fused with JetBrains Mono & Maple Mono
  FUSION_DEVELOPER: Space Time
  FUSION_COPYRIGHT: Copyright 2025 Space Time (https://github.com/SpaceTimee/Fusion-JetBrainsMapleMono)
  FUSION_LICENSE: "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://openfontlicense.org"

jobs:
  check_release_updates:
    name: Check Release Updates
    runs-on: ubuntu-latest
    outputs:
      IS_UPDATED: ${{ steps.check_release_updates.outputs.IS_UPDATED }}
      LATEST_JETBRAINS_VERSION: ${{ steps.check_release_updates.outputs.LATEST_JETBRAINS_VERSION }}
      LATEST_MAPLE_VERSION: ${{ steps.check_release_updates.outputs.LATEST_MAPLE_VERSION }}

    steps:
      - name: Fetch Git Folder
        uses: actions/checkout@v4
        with:
          sparse-checkout: .git

      - name: Get Preview Run Id
        run: |
          PREV_RUN_ID="$(gh run list --workflow "$GITHUB_WORKFLOW" --limit 2 --json databaseId --jq ".[1].databaseId")"
          echo "PREV_RUN_ID=$PREV_RUN_ID" >> "$GITHUB_ENV"
          echo "Preview Run Id: $PREV_RUN_ID"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Download Preview Versions
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: versions
          run-id: ${{ env.PREV_RUN_ID }}
          github-token: ${{ secrets.GH_TOKEN }}

      - name: Check Release Updates
        id: check_release_updates
        run: |
          PREV_JETBRAINS_VERSION="$(cat "jetbrains_version.txt" 2> "/dev/null" || echo "")"
          PREV_MAPLE_VERSION="$(cat "maple_version.txt" 2> "/dev/null" || echo "")"
          LATEST_JETBRAINS_VERSION="$(curl -s "$LATEST_JETBRAINS_RELEASE_API_URL" | jq -r ".tag_name")
          LATEST_MAPLE_VERSION="$(curl -s "$LATEST_MAPLE_RELEASE_API_URL" | jq -r ".tag_name")

          if [[ "$PREV_JETBRAINS_VERSION" == "$LATEST_JETBRAINS_VERSION" || "$PREV_MAPLE_VERSION" != "$LATEST_MAPLE_VERSION" ]]; then
            echo "$LATEST_JETBRAINS_VERSION" > "jetbrains_version.txt"
            echo "$LATEST_MAPLE_VERSION" > "maple_version.txt"
            echo "IS_UPDATED=true" >> "$GITHUB_OUTPUT"
            echo "LATEST_JETBRAINS_VERSION=$LATEST_JETBRAINS_VERSION" >> "$GITHUB_OUTPUT"
            echo "LATEST_MAPLE_VERSION=$LATEST_MAPLE_VERSION" >> "$GITHUB_OUTPUT"
          else
            echo "IS_UPDATED=false" >> "$GITHUB_OUTPUT"
          fi

          echo "Preview JetBrains Version: $PREV_JETBRAINS_VERSION"
          echo "Preview Maple Version: $PREV_MAPLE_VERSION"
          echo "Latest JetBrains Version: $LATEST_JETBRAINS_VERSION"
          echo "Latest Maple Version: $LATEST_MAPLE_VERSION"

      - name: Upload Versions
        uses: actions/upload-artifact@v4
        with:
          name: versions
          path: "*_version.txt"

  fuse_release_fonts:
    name: Fuse Release Fonts
    runs-on: ubuntu-latest
    needs: check_release_updates
    if: ${{ needs.check_release_updates.outputs.IS_UPDATED }} == 'true'
    strategy:
      fail-fast: false
      matrix:
        NERD:
          - SUFFIX: NF
            ARGS: --nerd-font
          - SUFFIX: NNF
            ARGS: --no-nerd-font
        NARROW:
          - SUFFIX: NR
            ARGS: --cn-narrow
          - SUFFIX: NNR
            ARGS: ""
    env:
      LATEST_JETBRAINS_VERSION: ${{ needs.check_release_updates.outputs.LATEST_JETBRAINS_VERSION }}
      LATEST_MAPLE_VERSION: ${{ needs.check_release_updates.outputs.LATEST_MAPLE_VERSION }}
      NERD_SUFFIX: ${{ matrix.NERD.SUFFIX }}
      NERD_ARGS: ${{ matrix.NERD.ARGS }}
      NARROW_SUFFIX: ${{ matrix.NARROW.SUFFIX }}
      NARROW_ARGS: ${{ matrix.NARROW.ARGS }}

    steps:
      - name: Fetch OFL License
        uses: actions/checkout@v4
        with:
          sparse-checkout: OFL.txt

      - name: Generate Version
        run: |
          FUSION_VERSION="1.$(tr -d "." <<< "${LATEST_JETBRAINS_VERSION//v/}").$(tr -d "." <<< "${LATEST_MAPLE_VERSION//v/}")"
          echo "FUSION_VERSION=$FUSION_VERSION" >> $GITHUB_ENV
          echo "Version: $FUSION_VERSION"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
          check-latest: true

      - name: Install Pip Dependencies
        run: pip install gftools fonttools

      - name: Build JetBrains
        run: |
          # git clone -b "$LATEST_JETBRAINS_VERSION" --single-branch $JETBRAINS_GIT_URL
          git clone "$JETBRAINS_GIT_URL"
          cd "JetBrainsMono"
          gftools builder "sources/config.yaml"
          cd ..
          mkdir -p "source-fonts/jetbrains"
          cp -r "JetBrainsMono/fonts/ttf/*" "source-fonts/jetbrains/"

      - name: Build Maple
        run: |
          # git clone -b "$LATEST_MAPLE_VERSION" --single-branch "$MAPLE_GIT_URL"
          git clone "$MAPLE_GIT_URL"
          cd "maple-font"
          pip install -r "requirements.txt"
          python build.py --normal --liga --cn --hinted --ttf-only "$NERD_ARGS" "$NARROW_ARGS"
          cd ..
          mkdir -p "source-fonts/maple"
          if [[ -z "$NERD_SUFFIX" ]]; then
            cp -r "maple-font/fonts/CN/*" "source-fonts/maple/"
          else
            cp -r "maple-font/fonts/NF-CN/*" "source-fonts/maple/"
          fi

      - name: Fuse Fonts
        run: |
          mkdir -p "fused-fonts-HT"
          mkdir -p "fused-fonts-NHT"
          for STYLE in "Thin ThinItalic ExtraLight ExtraLightItalic Light LightItalic Regular Italic Medium MediumItalic SemiBold SemiBoldItalic Bold BoldItalic ExtraBold ExtraBoldItalic"; do
            fonttools merge "source-fonts/maple/MapleMonoNormal-$NERD_SUFFIX-CN-$STYLE.ttf" "source-fonts/jetbrains/JetBrainsMono-$STYLE.ttf"
            gftools rename-font "merged.ttf" "$FUSION_NAME"
            gftools update-nameids "merged.ttf" --uniqueid "$FUSION_ID-$STYLE-$FUSION_VERSION" \
                                              --description "$FUSION_DESCRIPTION" \
                                              --designer "$FUSION_DEVELOPER" \
                                              --manufacturer "$FUSION_DEVELOPER" \
                                              --version "$FUSION_VERSION" \
                                              --copyright "$JETBRAINS_COPYRIGHT\n$MAPLE_COPYRIGHT\n$FUSION_COPYRIGHT" \
                                              --license "$FUSION_LICENSE"
            gftools drop-hints "merged.ttf.fix" "merged-NHT.ttf.fix"
            mv "merged.ttf.fix" "fused-fonts-HT/$FUSION_ID-$STYLE.ttf"
            mv "merged-NHT.ttf.fix" "fused-fonts-NHT/$FUSION_ID-$STYLE.ttf"
            cp "OFL.txt" "fused-fonts-HT/LICENSE.txt"
            cp "OFL.txt" "fused-fonts-NHT/LICENSE.txt"
          done

      - name: Zip Fonts
        run: |
          zip -r -j "$FUSION_ID-$NERD_SUFFIX-$NARROW_SUFFIX-HT.zip" "fused-fonts-HT/"
          zip -r -j "$FUSION_ID-$NERD_SUFFIX-$NARROW_SUFFIX-NHT.zip" "fused-fonts-NHT/"

      - name: Release Fonts
        uses: softprops/action-gh-release@v2
        with:
          files: |
            $FUSION_ID-$NERD_SUFFIX-$NARROW_SUFFIX-HT.zip
            $FUSION_ID-$NERD_SUFFIX-$NARROW_SUFFIX-NHT.zip
          tag_name: ${{ env.FUSION_VERSION }}
          name: ${{ env.FUSION_VERSION }}
          body: >
            Fused with
            [JetBrains Mono ${{ needs.check_release_updates.outputs.LATEST_JETBRAINS_VERSION }}](https://github.com/JetBrains/JetBrainsMono/releases/tag/${{ needs.check_release_updates.outputs.LATEST_JETBRAINS_VERSION }}) &
            [Maple Mono ${{ needs.check_release_updates.outputs.LATEST_MAPLE_VERSION }}](https://github.com/subframe7536/maple-font/releases/tag/${{ needs.check_release_updates.outputs.LATEST_MAPLE_VERSION }})


            Built with
            [Github Workflow #${{ github.run_number }}](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          append-body: false
          draft: false
          prerelease: false
          make_latest: true
          token: ${{ secrets.GH_TOKEN }}
