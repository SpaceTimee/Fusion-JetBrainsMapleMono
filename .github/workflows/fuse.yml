name: Fuse Typefaces

on:
  schedule:
    - cron: "0 * * * *" # 每小时运行一次
  workflow_dispatch:

jobs:
  check_updates:
    runs-on: ubuntu-latest
    outputs:
      is_commit_updated: ${{ steps.check_commit.outputs.is_updated }}
      is_release_updated: ${{ steps.check_release.outputs.is_updated }}

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 Check Latest Commit Updates
        id: check_commit
        run: |
          JETBRAINS_COMMIT=$(git ls-remote https://github.com/JetBrains/JetBrainsMono.git refs/heads/master | awk '{print $1}')
          MAPLE_COMMIT=$(git ls-remote https://github.com/subframe7536/maple-font.git refs/heads/main | awk '{print $1}')

          echo "Latest JetBrains Mono Commit: $JETBRAINS_COMMIT"
          echo "Latest Maple Font Commit: $MAPLE_COMMIT"

          PREV_JETBRAINS_COMMIT=$(cat jetbrains_commit.txt 2>/dev/null || echo "")
          PREV_MAPLE_COMMIT=$(cat maple_commit.txt 2>/dev/null || echo "")

          if [[ "$JETBRAINS_COMMIT" != "$PREV_JETBRAINS_COMMIT" || "$MAPLE_COMMIT" != "$PREV_MAPLE_COMMIT" ]]; then
            echo "is_updated=true" >> $GITHUB_OUTPUT
            echo "$JETBRAINS_COMMIT" > jetbrains_commit.txt
            echo "$MAPLE_COMMIT" > maple_commit.txt
          else
            echo "is_updated=false" >> $GITHUB_OUTPUT
          fi

      - name: 🔍 Check Latest Release Updates
        id: check_release
        run: |
          JETBRAINS_RELEASE=$(curl -s https://api.github.com/repos/JetBrains/JetBrainsMono/releases/latest | jq -r '.tag_name')
          MAPLE_RELEASE=$(curl -s https://api.github.com/repos/subframe7536/maple-font/releases/latest | jq -r '.tag_name')

          echo "Latest JetBrains Mono Release: $JETBRAINS_RELEASE"
          echo "Latest Maple Font Release: $MAPLE_RELEASE"

          PREV_JETBRAINS_RELEASE=$(cat jetbrains_release.txt 2>/dev/null || echo "")
          PREV_MAPLE_RELEASE=$(cat maple_release.txt 2>/dev/null || echo "")

          if [[ "$JETBRAINS_RELEASE" != "$PREV_JETBRAINS_RELEASE" || "$MAPLE_RELEASE" != "$PREV_MAPLE_RELEASE" ]]; then
            echo "is_updated=true" >> $GITHUB_OUTPUT
            echo "$JETBRAINS_RELEASE" > jetbrains_release.txt
            echo "$MAPLE_RELEASE" > maple_release.txt
          else
            echo "is_updated=false" >> $GITHUB_OUTPUT
          fi

  merge_and_commit:
    needs: check_updates
    if: needs.check_updates.outputs.is_commit_updated == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Install Dependencies
        run: pip install fonttools

      - name: 🛠️ Ensure merge_fonts.sh is executable
        run: chmod +x ./merge_fonts.sh

      - name: 🔽 Download and Merge Fonts
        run: |
          ./merge_fonts.sh  # 调用合并字体的脚本

      - name: ✍️ Commit and Push Merged Fonts
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add merged_fonts/*.ttf jetbrains_commit.txt maple_commit.txt
          git commit -m "Auto-merge latest JetBrains Mono and Maple Font (new commit detected)"
          git push

  merge_and_release:
    needs: check_updates
    if: needs.check_updates.outputs.is_release_updated == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Install Dependencies
        run: pip install fonttools

      - name: 🛠️ Ensure merge_fonts.sh is executable
        run: chmod +x ./merge_fonts.sh

      - name: 🔽 Download and Merge Fonts
        run: |
          ./merge_fonts.sh  # 调用合并字体的脚本

      - name: 🚀 Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: merged_fonts/*.ttf
          tag_name: latest
          name: "Latest Merged Fonts"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.FUSION_JET_BRAINS_MAPLE_MONO_TOKEN }}
